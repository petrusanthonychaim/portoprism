<!DOCTYPE html>
<html>
<head>
    <title>Line Chart with Chart.js 4.4</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <style>
        .chart-container {
            width: 90%;
            max-width: 700px;
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>

<div class="chart-container">
    <canvas id="myChart"></canvas>
</div>

<script>
// Your data remains the same. For line charts, Chart.js can also handle
// data directly as an array of y-values if you want labels for x-axis,
// but {x,y} objects are perfect for numerical x-axes or when x-values are not sequential.
var xyValues = [
  {x:50, y:7},
  {x:60, y:8},
  {x:70, y:8},
  {x:80, y:9},
  {x:90, y:9},
  {x:100, y:9},
  {x:110, y:10},
  {x:120, y:11},
  {x:130, y:14},
  {x:140, y:14},
  {x:150, y:15}
];

// Get the canvas element context
const ctx = document.getElementById('myChart');

// Ensure the canvas element exists before trying to create the chart
if (ctx) {
    new Chart(ctx, {
        type: "line", // <--- THIS IS THE MAIN CHANGE: from "scatter" to "line"
        data: {
            datasets: [{
                label: 'Trend Line', // Label for the dataset, appears in legend
                data: xyValues,
                borderColor: 'rgb(75, 192, 192)', // Line color
                backgroundColor: 'rgba(75, 192, 192, 0.2)', // Area under the line color (optional)
                fill: true, // Fill the area under the line
                tension: 0.1, // Smoothness of the line (0 = straight, 1 = very curved)
                pointRadius: 5, // Radius of data points
                pointBackgroundColor: 'rgb(75, 192, 192)', // Color of data points
                pointBorderColor: '#fff', // Border color of data points
                pointHoverRadius: 7, // Radius on hover
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                x: {
                    type: 'linear', // Keep as linear for numerical x-axis
                    min: 40,
                    max: 160,
                    title: {
                        display: true,
                        text: 'X-axis Value'
                    }
                },
                y: {
                    type: 'linear', // Keep as linear for numerical y-axis
                    min: 6,
                    max: 16,
                    title: {
                        display: true,
                        text: 'Y-axis Value'
                    }
                }
            },
            plugins: {
                legend: {
                    display: true, // Typically, legends are useful for line charts, so let's display it
                    position: 'top',
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            // Customize tooltip to show X and Y values
                            return `X: ${context.parsed.x}, Y: ${context.parsed.y}`;
                        }
                    }
                },
                title: {
                    display: true,
                    text: 'My Data Trend (Line Chart)'
                }
            }
        }
    });
} else {
    console.error("Canvas element with ID 'myChart' not found.");
}
</script>

</body>
</html>